<svg width="184" height="117" viewBox="0 0 184 117" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="Frame 1">
<rect x="2.5" y="2.5" width="179" height="112" stroke="black" stroke-width="5"/>
<rect id="Rectangle 1" x="78" y="74" width="1" height="1" fill="#D9D9D9"/>
<g id="Group 2">
<g id="Group 1">
<path id="Vector 2" d="M17 62L167 62" stroke="black"/>
<path id="Subtract" d="M21.4612 81.4314L21.2427 79.4434H21.2427L21.4612 81.4314ZM19 81.6352H17V83.7507L19.1121 83.6321L19 81.6352ZM49.7571 67.8914L51.0753 69.3955L49.7571 67.8914ZM60.4705 57.2781L59.0113 55.9104L59.0113 55.9104L60.4705 57.2781ZM62.0441 55.595L63.506 56.96L63.5137 56.9515L62.0441 55.595ZM62.0443 55.5948L63.514 56.9513L63.5301 56.9339L63.5458 56.916L62.0443 55.5948ZM62.0445 55.5946L60.5702 54.2432L60.5564 54.2581L60.543 54.2734L62.0445 55.5946ZM62.0446 55.5945L60.5855 54.2266L60.5779 54.2348L60.5703 54.243L62.0446 55.5945ZM62.0448 55.5943L63.5038 56.9622L63.5065 56.9593L62.0448 55.5943ZM70.2695 47.1172L68.8925 45.6668L68.8925 45.6668L70.2695 47.1172ZM91.057 37.0166L90.9762 39.015L91.057 37.0166ZM112.637 48.5875L114.005 47.1292L112.637 48.5875ZM120.708 56.6491L122.149 55.2618L122.142 55.2549L120.708 56.6491ZM120.709 56.6503L119.269 58.0376L119.275 58.0445L120.709 56.6503ZM123.117 59.1214L121.688 60.5207V60.5207L123.117 59.1214ZM134.478 69.857L133.197 71.3924L134.478 69.857ZM163.283 82.901L163.118 84.8943L163.283 82.901ZM165 83.0088L164.914 85.0069L167 85.097V83.0088H165ZM165 82.0078H167V80.0942L165.088 80.0097L165 82.0078ZM163.365 81.9044L163.2 83.8977L163.365 81.9044ZM135.119 69.0893L133.837 70.6247L135.119 69.0893ZM123.832 58.4218L122.403 59.821V59.821L123.832 58.4218ZM121.435 55.9623L119.999 57.3543L120.001 57.3565L121.435 55.9623ZM121.434 55.9611L122.87 54.5691L122.867 54.5659L121.434 55.9611ZM121.433 55.9603L119.999 57.3545L120 57.3555L121.433 55.9603ZM113.321 47.8584L114.69 46.4001L114.69 46.4001L113.321 47.8584ZM91.0974 36.0174L91.0166 38.0158L91.0974 36.0174ZM69.581 46.392L68.204 44.9416L68.204 44.9416L69.581 46.392ZM61.3084 54.9176L59.8466 53.5527L59.8448 53.5546L61.3084 54.9176ZM61.3046 54.9217L62.7667 56.2863L62.7682 56.2847L61.3046 54.9217ZM61.2928 54.9344L62.7546 56.2994L62.7549 56.299L61.2928 54.9344ZM61.2841 54.9436L62.7459 56.3086L62.7459 56.3086L61.2841 54.9436ZM59.7409 56.5942L58.2817 55.2265V55.2265L59.7409 56.5942ZM49.0979 67.1393L50.4162 68.6434L49.0979 67.1393ZM21.352 80.4374L21.1334 78.4493H21.1334L21.352 80.4374ZM19 80.6336L18.8855 78.6369L17 78.745V80.6336H19ZM21.2427 79.4434C20.4704 79.5283 19.6856 79.5936 18.8879 79.6384L19.1121 83.6321C19.9807 83.5833 20.8365 83.5121 21.6798 83.4194L21.2427 79.4434ZM48.4388 66.3873C40.9373 72.9619 32.3295 78.2247 21.2427 79.4434L21.6798 83.4194C33.8758 82.0788 43.2254 76.2755 51.0753 69.3955L48.4388 66.3873ZM59.0113 55.9104C55.6554 59.4907 52.1955 63.0948 48.4388 66.3873L51.0753 69.3955C54.9904 65.9641 58.5642 62.2364 61.9297 58.6458L59.0113 55.9104ZM60.5823 54.23C60.0611 54.7882 59.5381 55.3483 59.0113 55.9104L61.9297 58.6458C62.4595 58.0806 62.9851 57.5177 63.5059 56.96L60.5823 54.23ZM60.5747 54.2382L60.5745 54.2384L63.5137 56.9515L63.514 56.9513L60.5747 54.2382ZM60.543 54.2734L60.5429 54.2735L63.5458 56.916L63.5459 56.9159L60.543 54.2734ZM60.5703 54.243L60.5702 54.2432L63.5188 56.9461L63.5189 56.9459L60.5703 54.243ZM60.5857 54.2264L60.5855 54.2266L63.5037 56.9624L63.5038 56.9622L60.5857 54.2264ZM68.8925 45.6668C66.118 48.3008 63.3726 51.2419 60.583 54.2293L63.5065 56.9593C66.3139 53.9529 68.9753 51.1037 71.6465 48.5677L68.8925 45.6668ZM91.1378 35.0182C82.4326 34.6662 75.4463 39.4448 68.8925 45.6668L71.6465 48.5677C78.0231 42.514 83.9696 38.7316 90.9762 39.015L91.1378 35.0182ZM114.005 47.1292C107.06 40.611 99.7882 35.3681 91.1378 35.0182L90.9762 39.015C98.0744 39.302 104.417 43.6158 111.268 50.0459L114.005 47.1292ZM122.142 55.2549C119.411 52.4456 116.713 49.6707 114.005 47.1292L111.268 50.0459C113.897 52.5135 116.529 55.2204 119.274 58.0433L122.142 55.2549ZM122.15 55.2631L122.149 55.2618L119.267 58.0364L119.269 58.0376L122.15 55.2631ZM124.546 57.7221C123.739 56.8977 122.939 56.0752 122.143 55.2562L119.275 58.0445C120.071 58.8628 120.875 59.6903 121.688 60.5207L124.546 57.7221ZM135.76 68.3216C131.813 65.0276 128.129 61.3811 124.546 57.7221L121.688 60.5207C125.289 64.1978 129.089 67.9636 133.197 71.3924L135.76 68.3216ZM163.447 80.9078C152.492 80.0047 143.646 74.9041 135.76 68.3216L133.197 71.3924C141.423 78.2592 151.03 83.8978 163.118 84.8943L163.447 80.9078ZM165.086 81.0106C164.534 80.9868 163.988 80.9524 163.447 80.9078L163.118 84.8943C163.711 84.9432 164.31 84.9808 164.914 85.0069L165.086 81.0106ZM163 82.0078V83.0088H167V82.0078H163ZM163.2 83.8977C163.766 83.9442 164.336 83.9804 164.912 84.0058L165.088 80.0097C164.563 79.9865 164.044 79.9536 163.529 79.9112L163.2 83.8977ZM133.837 70.6247C141.979 77.4204 151.396 82.9245 163.2 83.8977L163.529 79.9112C152.857 79.0314 144.201 74.0653 136.401 67.5539L133.837 70.6247ZM122.403 59.821C125.999 63.4936 129.77 67.2296 133.837 70.6247L136.401 67.5539C132.495 64.2936 128.839 60.6769 125.261 57.0225L122.403 59.821ZM120.001 57.3565C120.795 58.1727 121.596 58.9966 122.403 59.821L125.261 57.0225C124.459 56.204 123.663 55.3852 122.869 54.5682L120.001 57.3565ZM119.998 57.3532L119.999 57.3543L122.871 54.5703L122.87 54.5691L119.998 57.3532ZM120 57.3555L120.001 57.3564L122.867 54.5659L122.866 54.565L120 57.3555ZM111.952 49.3167C114.599 51.8009 117.252 54.5293 119.999 57.3545L122.867 54.5661C120.133 51.7544 117.415 48.9581 114.69 46.4001L111.952 49.3167ZM91.0166 38.0158C98.5029 38.3186 105.078 42.8647 111.952 49.3167L114.69 46.4001C107.721 39.8596 100.217 34.3846 91.1783 34.0191L91.0166 38.0158ZM70.958 47.8425C77.379 41.7466 83.5854 37.7153 91.0166 38.0158L91.1783 34.0191C82.0482 33.6498 74.802 38.6776 68.204 44.9416L70.958 47.8425ZM62.7702 56.2826C65.5771 53.2766 68.2628 50.4013 70.958 47.8425L68.204 44.9416C65.4055 47.5984 62.6359 50.5655 59.8466 53.5527L62.7702 56.2826ZM62.7682 56.2847L62.772 56.2806L59.8448 53.5546L59.841 53.5587L62.7682 56.2847ZM62.7607 56.2928L62.7667 56.2863L59.8425 53.5571L59.8365 53.5635L62.7607 56.2928ZM62.7549 56.299L62.7607 56.2928L59.8365 53.5635L59.8307 53.5698L62.7549 56.299ZM62.7459 56.3086L62.7546 56.2994L59.831 53.5694L59.8223 53.5787L62.7459 56.3086ZM61.2001 57.962C61.7187 57.4086 62.2342 56.8566 62.7459 56.3086L59.8224 53.5786C59.3103 54.1271 58.7973 54.6764 58.2817 55.2265L61.2001 57.962ZM50.4162 68.6434C54.2917 65.2468 57.837 61.55 61.2001 57.962L58.2817 55.2265C54.9282 58.8043 51.4967 62.3775 47.7797 65.6353L50.4162 68.6434ZM21.5705 82.4254C33.4892 81.1153 42.6533 75.4471 50.4162 68.6434L47.7797 65.6353C40.3654 72.1335 31.9429 77.2611 21.1334 78.4493L21.5705 82.4254ZM19.1145 82.6303C19.9456 82.5827 20.7641 82.514 21.5705 82.4254L21.1334 78.4493C20.3965 78.5304 19.6473 78.5932 18.8855 78.6369L19.1145 82.6303ZM17 80.6336V81.6352H21V80.6336H17Z" fill="url(#paint0_angular_1_5)"/>
<g id="Rectangle 7" filter="url(#filter0_d_1_5)">
<rect x="57" y="55" width="5" height="5" rx="2.5" fill="#D9D9D9"/>
</g>
</g>
</g>
</g>
<defs>
<filter id="filter0_d_1_5" x="50" y="48" width="19" height="19" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feMorphology radius="3" operator="dilate" in="SourceAlpha" result="effect1_dropShadow_1_5"/>
<feOffset/>
<feGaussianBlur stdDeviation="2"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.482353 0 0 0 0 0.403922 0 0 0 0 0.717647 0 0 0 1 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1_5"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1_5" result="shape"/>
</filter>
<radialGradient id="paint0_angular_1_5" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(92 62.8621) rotate(-2.70329) scale(81.3639 57.4306)">
<stop offset="0.0103644" stop-color="#7F94BE"/>
<stop offset="0.010366" stop-color="#08285D"/>
<stop offset="0.507967" stop-color="#08285D"/>
<stop offset="0.509349" stop-color="#8196BF"/>
<stop offset="0.626463" stop-color="#8196BF"/>
<stop offset="0.951824" stop-color="#8095BE"/>
</radialGradient>
</defs>
</svg>
<!-- import React, { useEffect, useRef, useState } from 'react';
import { View, StyleSheet } from 'react-native';
import Svg, { Path, Circle } from 'react-native-svg';
import Animated, {
  useSharedValue,
  useAnimatedProps,
  withTiming,
  Easing,
  useAnimatedStyle,
  interpolate,
  Extrapolate,
} from 'react-native-reanimated';

export default function Sungraph() {
  const AnimatedPath = Animated.createAnimatedComponent(Path);
  const AnimatedCircle = Animated.createAnimatedComponent(Circle);

  const pathLength = useSharedValue(0);
  const progress = useSharedValue(0);
  const [length, setLength] = useState(0);
  const ref: any = useRef<typeof AnimatedPath>(null);

  useEffect(() => {
    progress.value = withTiming(1, {
      duration: 8000,
      easing: Easing.linear,
    });
  }, []);

  const animatedProps = useAnimatedProps(() => ({
    strokeDashoffset: length - length * progress.value,
  }));

  const animatedCircleProps = useAnimatedProps(() => {
    const lengthProgress = interpolate(progress.value, [0, 1], [0, length]);
    const point = ref.current.getPointAtLength(lengthProgress);
    return {
      cx: point.x,
      cy: point.y,
    };
  });

  return (
    <View style={styles.container}>
      <Svg width="451" height="437">
        <AnimatedPath
          onLayout={() => setLength(ref.current.getTotalLength())}
          ref={ref}
          d="M 239 17 C 142 17 48.5 103 48.5 213.5 C 48.5 324 126 408 244 408 C 362 408 412 319 412 213.5 C 412 108 334 68.5 244 68.5 C 154 68.5 102.68 135.079 99 213.5 C 95.32 291.921 157 350 231 345.5 C 305 341 357.5 290 357.5 219.5 C 357.5 149 314 121 244 121 C 174 121 151.5 167 151.5 213.5 C 151.5 260 176 286.5 224.5 286.5 C 273 286.5 296.5 253 296.5 218.5 C 296.5 184 270 177 244 177 C 218 177 197 198 197 218.5 C 197 239 206 250.5 225.5 250.5 C 245 250.5 253 242 253 218.5"
          fill="transparent"
          strokeWidth="5"
          stroke="blue"
          strokeLinecap="round"
          strokeDasharray={length}
          animatedProps={animatedProps}
        />
        <Animated.View style={{ height: 20, width: 20, backgroundColor: 'red' }}></Animated.View>
      </Svg>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'white',
  },
}); -->
